vector<ld> gauss(vector<vector<ld>> a) {
    int n = sz(a);
    for (int hi = 0; hi < n; ++hi) {
        if (!a[hi][hi]) {
            for (int i = hi + 1; i < n; ++i) {
                if (a[i][hi]) {
                    for (int j = 0; j < n; ++j) {
                        swap(a[i][j], a[hi][j]);
                    }
                    break;
                }
            }
        }
        if (hi) {
            for (int i = hi; i < n; ++i) {
                ld z = (a[i][hi - 1] ? a[hi - 1][hi - 1] / a[i][hi - 1] : a[i][hi - 1] / a[hi - 1][hi - 1]);
                for (int j = 0; j < n; ++j) {
                    a[i][j] = (a[i][hi - 1] ? a[hi - 1][j] - z * a[i][j] : a[i][j] - z * a[hi - 1][j]);
                }
            }
        }
    }
    // for (int i = 0; i < n; ++i) {
    //     for (int j = 0; j < n; ++j) {
    //         cout << a[i][j] << " ";
    //     }
    //     cout << '\n';
    // }
    vector<ld> res(n - 1, 0);
    for (int i = 0; i < n - 1; ++i) {
        for (int j = i + 1; j < n - 1; ++j) {
            ld z = (a[j][j] ? a[i][j] / a[j][j] : a[j][j] / a[i][j]);
            for (int e = 0; e < n; ++e) {
                a[i][e] = (a[j][j] ? a[i][e] - z * a[j][e] : a[j][e] - z * a[i][e]);
            }
        }
        res[i] = a[i][n - 1] / a[i][i];
    }
    // for (int i = 0; i < n; ++i) {
    //     for (int j = 0; j < n; ++j) {
    //         cout << a[i][j] << " ";
    //     }
    //     cout << '\n';
    // }
    return res;
}
