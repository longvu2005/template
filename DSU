struct DSU
{
    int pa[nax];

    DSU(int n)
    {
        pa.resize(n);
        rank.resize(n);
        for (int i = 0; i < n; ++i) {
            pa[i] = i;
            rank[i] = 0;
        }
    }

    int find(int u)
    {
        return pa[u] = ((u != pa[u]) ? find(pa[u]) : pa[u]);
    }

    void join(int u, int v)
    {
        u = find(u), v = find(v);
        if (rank[v] > rank[u])
        {
            swap(u, v);
        }
        pa[v] = u;
        if (rank[u] == rank[v])
        {
            rank[u]++;
        }
    }
};
